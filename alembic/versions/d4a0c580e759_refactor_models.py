"""refactor models

Revision ID: d4a0c580e759
Revises: 9954234d62d8
Create Date: 2022-07-06 15:46:02.043235

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd4a0c580e759'
down_revision = '9954234d62d8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('days',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('term_genres',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('timetable_genres',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assoc_parent',
    sa.Column('parent_email', sa.String(), nullable=True),
    sa.Column('student_email', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['parent_email'], ['parents.email'], ),
    sa.ForeignKeyConstraint(['student_email'], ['students.email'], ),
    sa.UniqueConstraint('parent_email'),
    sa.UniqueConstraint('student_email')
    )
    op.create_table('school_days',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('day_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.String(), nullable=False),
    sa.Column('end_time', sa.String(), nullable=False),
    sa.Column('timetable_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['day_id'], ['days.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['timetable_id'], ['timetables.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('school_weeks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('start_day', sa.String(), nullable=False),
    sa.Column('end_day', sa.String(), nullable=False),
    sa.Column('timetable_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['timetable_id'], ['timetables.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assoc_payment',
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('student_matric', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.ForeignKeyConstraint(['student_matric'], ['students.matric_id'], ),
    sa.UniqueConstraint('payment_id'),
    sa.UniqueConstraint('student_matric')
    )
    op.create_table('assoc_exam_stats',
    sa.Column('exam_id', sa.Integer(), nullable=True),
    sa.Column('student_matric', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exams.id'], ),
    sa.ForeignKeyConstraint(['student_matric'], ['students.matric_id'], ),
    sa.UniqueConstraint('exam_id'),
    sa.UniqueConstraint('student_matric')
    )
    op.drop_table('trimesters')
    op.drop_table('association_parent')
    op.drop_table('association_exam_stats')
    op.drop_table('association_exam_attendance')
    op.drop_table('academic_days')
    op.drop_table('association_class_attendance')
    op.drop_table('association_payment')
    op.drop_table('semesters')
    op.drop_constraint('academic_years_school_id_fkey', 'academic_years', type_='foreignkey')
    op.drop_column('academic_years', 'school_id')
    op.add_column('class_attendances', sa.Column('student_matric', sa.Integer(), nullable=False))
    op.add_column('class_attendances', sa.Column('observation', sa.String(), nullable=True))
    op.alter_column('class_attendances', 'period_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('class_attendances', 'date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_unique_constraint(None, 'class_attendances', ['id'])
    op.create_foreign_key(None, 'class_attendances', 'students', ['student_matric'], ['matric_id'], ondelete='CASCADE')
    op.drop_column('class_attendances', 'remark')
    op.add_column('exam_attendances', sa.Column('student_matric', sa.Integer(), nullable=False))
    op.add_column('exam_attendances', sa.Column('observation', sa.String(), nullable=True))
    op.add_column('exam_attendances', sa.Column('is_present', sa.Boolean(), server_default='false', nullable=False))
    op.create_unique_constraint(None, 'exam_attendances', ['id'])
    op.drop_constraint('exam_attendances_exam_id_fkey', 'exam_attendances', type_='foreignkey')
    op.create_foreign_key(None, 'exam_attendances', 'students', ['student_matric'], ['matric_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'exam_attendances', 'exams', ['exam_id'], ['id'], ondelete='CASCADE')
    op.drop_column('exam_attendances', 'remark')
    op.drop_column('exam_attendances', 'date')
    op.add_column('exam_days', sa.Column('day_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'exam_days', 'days', ['day_id'], ['id'], ondelete='CASCADE')
    op.drop_column('exam_days', 'name')
    op.add_column('exam_grades', sa.Column('observation', sa.String(), nullable=True))
    op.drop_constraint('exam_grades_exam_id_key', 'exam_grades', type_='unique')
    op.drop_constraint('exam_grades_student_matric_key', 'exam_grades', type_='unique')
    op.drop_column('exam_grades', 'remark')
    op.drop_constraint('exam_stats_exam_id_key', 'exam_stats', type_='unique')
    op.create_unique_constraint(None, 'exam_stats', ['id'])
    op.alter_column('exams', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('exams', 'genre')
    op.alter_column('fees', 'grade_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.add_column('periods', sa.Column('school_day_id', sa.Integer(), nullable=False))
    op.drop_constraint('periods_academic_day_id_fkey', 'periods', type_='foreignkey')
    op.create_foreign_key(None, 'periods', 'school_days', ['school_day_id'], ['id'], ondelete='CASCADE')
    op.drop_column('periods', 'academic_day_id')
    op.drop_constraint('staff_matric_id_key', 'staff', type_='unique')
    op.drop_column('staff', 'matric_id')
    op.add_column('students', sa.Column('classe_id', sa.Integer(), nullable=True))
    op.drop_constraint('students_grade_id_fkey', 'students', type_='foreignkey')
    op.create_foreign_key(None, 'students', 'classes', ['classe_id'], ['id'], ondelete='CASCADE')
    op.drop_column('students', 'grade_id')
    op.add_column('subjects', sa.Column('classe_id', sa.Integer(), nullable=False))
    op.drop_constraint('subjects_academic_year_id_fkey', 'subjects', type_='foreignkey')
    op.drop_constraint('subjects_grade_id_fkey', 'subjects', type_='foreignkey')
    op.create_foreign_key(None, 'subjects', 'classes', ['classe_id'], ['id'], ondelete='CASCADE')
    op.drop_column('subjects', 'academic_year_id')
    op.drop_column('subjects', 'grade_id')
    op.add_column('terms', sa.Column('name', sa.String(), nullable=False))
    op.add_column('terms', sa.Column('start_date', sa.String(), nullable=False))
    op.add_column('terms', sa.Column('end_date', sa.String(), nullable=False))
    op.add_column('terms', sa.Column('term_genre_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'terms', 'term_genres', ['term_genre_id'], ['id'], ondelete='CASCADE')
    op.drop_column('terms', 'genre')
    op.add_column('timetables', sa.Column('name', sa.String(), nullable=False))
    op.add_column('timetables', sa.Column('timetable_genre_id', sa.Integer(), nullable=False))
    op.add_column('timetables', sa.Column('classe_id', sa.Integer(), nullable=False))
    op.drop_constraint('timetables_grade_id_fkey', 'timetables', type_='foreignkey')
    op.create_foreign_key(None, 'timetables', 'classes', ['classe_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'timetables', 'timetable_genres', ['timetable_genre_id'], ['id'], ondelete='CASCADE')
    op.drop_column('timetables', 'genre')
    op.drop_column('timetables', 'grade_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('timetables', sa.Column('grade_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('timetables', sa.Column('genre', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'timetables', type_='foreignkey')
    op.drop_constraint(None, 'timetables', type_='foreignkey')
    op.create_foreign_key('timetables_grade_id_fkey', 'timetables', 'grades', ['grade_id'], ['id'], ondelete='CASCADE')
    op.drop_column('timetables', 'classe_id')
    op.drop_column('timetables', 'timetable_genre_id')
    op.drop_column('timetables', 'name')
    op.add_column('terms', sa.Column('genre', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'terms', type_='foreignkey')
    op.drop_column('terms', 'term_genre_id')
    op.drop_column('terms', 'end_date')
    op.drop_column('terms', 'start_date')
    op.drop_column('terms', 'name')
    op.add_column('subjects', sa.Column('grade_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('subjects', sa.Column('academic_year_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'subjects', type_='foreignkey')
    op.create_foreign_key('subjects_grade_id_fkey', 'subjects', 'grades', ['grade_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('subjects_academic_year_id_fkey', 'subjects', 'academic_years', ['academic_year_id'], ['id'], ondelete='CASCADE')
    op.drop_column('subjects', 'classe_id')
    op.add_column('students', sa.Column('grade_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'students', type_='foreignkey')
    op.create_foreign_key('students_grade_id_fkey', 'students', 'grades', ['grade_id'], ['id'], ondelete='CASCADE')
    op.drop_column('students', 'classe_id')
    op.add_column('staff', sa.Column('matric_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_unique_constraint('staff_matric_id_key', 'staff', ['matric_id'])
    op.add_column('periods', sa.Column('academic_day_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'periods', type_='foreignkey')
    op.create_foreign_key('periods_academic_day_id_fkey', 'periods', 'timetables', ['academic_day_id'], ['id'], ondelete='CASCADE')
    op.drop_column('periods', 'school_day_id')
    op.alter_column('fees', 'grade_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('exams', sa.Column('genre', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('exams', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'exam_stats', type_='unique')
    op.create_unique_constraint('exam_stats_exam_id_key', 'exam_stats', ['exam_id'])
    op.add_column('exam_grades', sa.Column('remark', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_unique_constraint('exam_grades_student_matric_key', 'exam_grades', ['student_matric'])
    op.create_unique_constraint('exam_grades_exam_id_key', 'exam_grades', ['exam_id'])
    op.drop_column('exam_grades', 'observation')
    op.add_column('exam_days', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'exam_days', type_='foreignkey')
    op.drop_column('exam_days', 'day_id')
    op.add_column('exam_attendances', sa.Column('date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('exam_attendances', sa.Column('remark', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'exam_attendances', type_='foreignkey')
    op.drop_constraint(None, 'exam_attendances', type_='foreignkey')
    op.create_foreign_key('exam_attendances_exam_id_fkey', 'exam_attendances', 'exams', ['exam_id'], ['id'])
    op.drop_constraint(None, 'exam_attendances', type_='unique')
    op.drop_column('exam_attendances', 'is_present')
    op.drop_column('exam_attendances', 'observation')
    op.drop_column('exam_attendances', 'student_matric')
    op.add_column('class_attendances', sa.Column('remark', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'class_attendances', type_='foreignkey')
    op.drop_constraint(None, 'class_attendances', type_='unique')
    op.alter_column('class_attendances', 'date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('class_attendances', 'period_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('class_attendances', 'observation')
    op.drop_column('class_attendances', 'student_matric')
    op.add_column('academic_years', sa.Column('school_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('academic_years_school_id_fkey', 'academic_years', 'schools', ['school_id'], ['id'], ondelete='CASCADE')
    op.create_table('semesters',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('start_date', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='semesters_pkey')
    )
    op.create_table('association_payment',
    sa.Column('payment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('student_matric', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], name='association_payment_payment_id_fkey'),
    sa.ForeignKeyConstraint(['student_matric'], ['students.matric_id'], name='association_payment_student_matric_fkey'),
    sa.UniqueConstraint('payment_id', name='association_payment_payment_id_key'),
    sa.UniqueConstraint('student_matric', name='association_payment_student_matric_key')
    )
    op.create_table('association_class_attendance',
    sa.Column('attendance_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('student_matric', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['attendance_id'], ['class_attendances.id'], name='association_class_attendance_attendance_id_fkey'),
    sa.ForeignKeyConstraint(['student_matric'], ['students.matric_id'], name='association_class_attendance_student_matric_fkey'),
    sa.UniqueConstraint('attendance_id', name='association_class_attendance_attendance_id_key'),
    sa.UniqueConstraint('student_matric', name='association_class_attendance_student_matric_key')
    )
    op.create_table('academic_days',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('start_time', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('end_time', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('timetable_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['timetable_id'], ['timetables.id'], name='academic_days_timetable_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='academic_days_pkey')
    )
    op.create_table('association_exam_attendance',
    sa.Column('attendance_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('student_matric', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['attendance_id'], ['exam_attendances.id'], name='association_exam_attendance_attendance_id_fkey'),
    sa.ForeignKeyConstraint(['student_matric'], ['students.matric_id'], name='association_exam_attendance_student_matric_fkey'),
    sa.UniqueConstraint('attendance_id', name='association_exam_attendance_attendance_id_key'),
    sa.UniqueConstraint('student_matric', name='association_exam_attendance_student_matric_key')
    )
    op.create_table('association_exam_stats',
    sa.Column('exam_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('student_matric', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['exam_id'], ['exams.id'], name='association_exam_stats_exam_id_fkey'),
    sa.ForeignKeyConstraint(['student_matric'], ['students.matric_id'], name='association_exam_stats_student_matric_fkey'),
    sa.UniqueConstraint('exam_id', name='association_exam_stats_exam_id_key'),
    sa.UniqueConstraint('student_matric', name='association_exam_stats_student_matric_key')
    )
    op.create_table('association_parent',
    sa.Column('parent_email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('student_email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_email'], ['parents.email'], name='association_parent_parent_email_fkey'),
    sa.ForeignKeyConstraint(['student_email'], ['students.email'], name='association_parent_student_email_fkey'),
    sa.UniqueConstraint('parent_email', name='association_parent_parent_email_key'),
    sa.UniqueConstraint('student_email', name='association_parent_student_email_key')
    )
    op.create_table('trimesters',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('start_date', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='trimesters_pkey')
    )
    op.drop_table('assoc_exam_stats')
    op.drop_table('assoc_payment')
    op.drop_table('school_weeks')
    op.drop_table('school_days')
    op.drop_table('assoc_parent')
    op.drop_table('timetable_genres')
    op.drop_table('term_genres')
    op.drop_table('days')
    # ### end Alembic commands ###
